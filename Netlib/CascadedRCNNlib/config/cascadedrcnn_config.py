import detectron2.model_zoo as model_zoo
from .default import _C 

def get_cfg():
    return _C.clone()


_cfg = get_cfg()
_cfg.merge_from_file(model_zoo.get_config_file('Base-RCNN-FPN.yaml'))

_cfg.MODEL.MASK_ON = True

_cfg.MODEL.ANCHOR_GENERATOR.SIZES = [[8,16], [32]]
_cfg.MODEL.ANCHOR_GENERATOR.ASPECT_RATIOS = [[0.5, 1.0, 2.0]]

# 
_cfg.MODEL.RESNETS.DEPTH = 50
_cfg.MODEL.RESNETS.OUT_FEATURES = ["res2", "res3", "res4", "res5"]
_cfg.MODEL.RESNETS.DEFORM_ON_PER_STAGE = [False, False, False, False]
_cfg.MODEL.RESNETS.DEFORM_MODULATED = False
_cfg.MODEL.RESNETS.NORM = "GN"
_cfg.MODEL.BACKBONE.FREEZE_AT = 0

_cfg.MODEL.FPN.OUT_CHANNELS = 256
_cfg.MODEL.FPN.NORM = "GN"
_cfg.MODEL.FPN.FUSE_TYPE = "sum"



_cfg.MODEL.RPN.IN_FEATURES = ["p2", "p3"]
_cfg.MDOEL.RPN.PRE_NMS_TOPK_TRAIN = 6000
_cfg.MODEL.RPN.PRE_NMS_TOPK_TEST = 6000
_cfg.MODEL.RPN.POST_NMS_TOPK_TRAIN = 2000
_cfg.MODEL.RPN.POST_NMS_TOPK_TEST = 1500


_cfg.MODEL.ROI_HEADS.NAME = "CascadedROIHeads"
_cfg.MODEL.ROI_HEADS.IN_FEATURES = ["p2", "p3"]

_cfg.MODEL.ROI_BOX_HEAD.POOLER_TYPE = "ROIAlignV2"
_cfg.MODEL.ROI_BOX_HEAD.POOLER_RESOLUTION = 7
_cfg.MODEL.ROI_BOX_HEAD.NUM_FC = 2

_cfg.MODEL.ROI_MASK_HEAD.NAME = "MaskRCNNConvUpsampleHead"
_cfg.MODEL.ROI_MASK_HEAD.POOLER_TYPE = "ROIAlignV2"
_cfg.MODEL.ROI_MASK_HEAD.POOLER_RESOLUTION = 14
_cfg.MODEL.ROI_MASK_HEAD.NORM = "GN"
_cfg.MDOEL.ROI_MASK_HEAD.NUM_CONV = 4
_cfg.MODEL.ROI_MASK_HEAD.CLS_AGNOSTIC_MASK = False
_cfg.MODEL.ROI_MASK_HEAD.NUM_CLASSES = 6



_cfg.MODEL.PIXEL_MEAN = [191.3349015,149.31071504,188.0884479]
_cfg.MODEL.PIXEL_STD = [48.40602968, 59.57261931, 43.91109296]

_cfg.DATASETS.TRAIN = ("coco_2017_train",)
_cfg.DATASETS.TEST = ("coco_2017_val",)
_cfg.SOLVER.IMS_PER_BATCH = 16
_cfg.SOLVER.BASE_LR = 0.02
_cfg.SOLVER.STEPS = (60000, 80000)
_cfg.SOLVER.MAX_ITER = 90000
_cfg.SOLVER.CHECKPOINT_PERIOD = 5000



